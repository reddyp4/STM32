// In M0, IOPORT, while in F4 it is clock access
// BTN=PC13, Bus=AHB1, RCC_IOPENR, bit 3
// LED=PA5, Bus=AHB1, RCC_IOPENR, bit 0
#include "stm32g070xx.h"
#include "stm32g0xx_hal.h"
#include "stm32g0xx_hal_gpio.h"
#include "stm32g0xx_hal_gpio_ex.h"
#include "stm32g0xx_hal_uart.h"
#include "stm32g0xx_hal_uart_ex.h"

//#define HAL_UART_MODULE_ENABLED //To enable UART transmit

#define LED_PORT    GPIOA
#define LED_PIN     GPIO_PIN_5
#define BTN_PORT    GPIOC
#define BTN_PIN     GPIO_PIN_13

UART_HandleTypeDef huart2;

void pc13_btn_init(void);
void pa5_led_init(void);
void usart_init(void);

int counter;
uint8_t buttonStatus;
char message[20] = "Hello from STM32\n";

int main()
{
    HAL_Init(); //Initialize all HAL
    pa5_led_init(); //Initialize LED
    pc13_btn_init();    //Initialize Button
    usart_init();       //USART initialization
    while(1)
    {
        /* GPIO MODULE */
        //Read button state and 
        buttonStatus = HAL_GPIO_ReadPin(BTN_PORT,BTN_PIN);
        HAL_GPIO_WritePin(LED_PORT,LED_PIN,buttonStatus);

        /* UART transmit */
        //HAL_UART_Transmit(&huart2, (uint8_t *) message, 20, 100);
        HAL_Delay(20);

        /* UART MODULE*/
        counter++;
    }
}

void pa5_led_init()
{
    __HAL_RCC_GPIOA_CLK_ENABLE();
    //1. LED=PA5 as output
    GPIO_InitTypeDef GPIO_InitStruct={
        LED_PIN,  //Pin
        GPIO_MODE_OUTPUT_PP,  //Mode
        GPIO_NOPULL,  //Pull
        GPIO_SPEED_FREQ_LOW,  //Speed
        0,  //Alternate
        };
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}

void pc13_btn_init()
{
    __HAL_RCC_GPIOC_CLK_ENABLE();
    //1. BTN=PC12 as input
    GPIO_InitTypeDef GPIO_InitStruct={
        BTN_PIN,  //Pin
        GPIO_MODE_INPUT,  //Mode
        GPIO_NOPULL,  //Pull
        GPIO_SPEED_FREQ_LOW,  //Speed
        0,  //Alternate
        };
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
}

void SysTick_Handler(void)
{
    //Increment the clock
    HAL_IncTick();  //Update tick based on clock
}

void usart_init()
{
    //alternate function AF00 for PA14 and PA15
    //Enable clock for GPIOA
    __HAL_RCC_GPIOA_CLK_ENABLE();

    //Enable UART module clock access
    __HAL_RCC_USART2_CLK_ENABLE();

    //Configure pins to alternate functions-UART
    GPIO_InitTypeDef GPIO_UART={0};
    GPIO_UART.Pin = GPIO_PIN_2 | GPIO_PIN_3;
    GPIO_UART.Mode = GPIO_MODE_AF_PP;
    GPIO_UART.Alternate = GPIO_AF1_USART2;   //As per manual
    GPIO_UART.Pull = GPIO_NOPULL;
    GPIO_UART.Speed = GPIO_SPEED_FREQ_VERY_HIGH;

    HAL_GPIO_Init(GPIOA, &GPIO_UART);

    //Configure UART, as per HAL UART driver registers
    huart2.Instance = USART2;
    huart2.Init.BaudRate = 115200;                          /* Baud rate*/
    huart2.Init.WordLength = UART_WORDLENGTH_8B;            /* 8-bit word */
    huart2.Init.StopBits = UART_STOPBITS_1;                 /* Single stop bit */
    huart2.Init.Parity = UART_PARITY_NONE;                  /* No Parity */
    huart2.Init.Mode = UART_MODE_TX;                        /* TX only to PC */
    huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;			/* No flow control */
    huart2.Init.OverSampling = UART_OVERSAMPLING_16;        /* 16-bit oversampling*/
    HAL_UART_Init(&huart2);
}
